<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:sec="http://cxf.apache.org/configuration/security"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

	<mongo:mongo host="localhost" port="27017" id="mongo" />
	<mongo:db-factory dbname="saleschannel" mongo-ref="mongo"
		id="mongoDbFactory" /> 

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<!-- Start @@ Bean mapping for Restlet service -->
	<bean id="basecampComponent" class="org.restlet.ext.spring.SpringComponent">
		<property name="defaultTarget" ref="autoRestletAppliction" />
	</bean>

	<bean id="autoRestletAppliction" class="com.saleschannel.api.frontcontroller.SalesChannelApplication">
		<property name="inboundRoot" ref="router" />
	</bean>

	<bean name="router" class="org.restlet.ext.spring.SpringBeanRouter" />
	
	<bean id="applicationContextProvider" class="com.saleschannel.api.utility.ApplicationContextProvider"/>
	<!-- Define all the routes -->

	<!-- sales channel bean Creation Starts -->
	
	<!-- customer bean Creation and API Starts -->
	<bean name="/customerLogin" class="com.saleschannel.api.customer.CustomerLoginController" scope="prototype">
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/customer" class="com.saleschannel.api.customer.CustomerController" scope="prototype">
		<property name="customerService" ref="customerService" />
    </bean>
	
	<bean id="customerService" class="com.saleschannel.api.customer.CustomerServiceImpl">
		<property name="customerDao" ref="customerDao" />
	</bean>
	
	<bean id="customerDao" class="com.saleschannel.api.customer.CustomerDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- customer bean Creation and API Ends -->
	
	<!-- product bean Creation and API Starts -->
	<bean name="/product" class="com.saleschannel.api.product.ProductController" scope="prototype">
		<property name="productService" ref="productService" />
		<property name="customerService" ref="customerService" />
		<property name="categoryService" ref="categoryService" />
		<property name="inventoryService" ref="inventoryService" />
    </bean>
    
    <bean name="/productAttribute" class="com.saleschannel.api.product.ProductAttributesController" scope="prototype">
		<property name="productService" ref="productService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/productAccessories" class="com.saleschannel.api.product.ProductAccessoriesController" scope="prototype">
		<property name="productService" ref="productService" />
		<property name="customerService" ref="customerService" />
    </bean>
	
	<bean id="productService" class="com.saleschannel.api.product.ProductServiceImpl">
		<property name="productDao" ref="productDao" />
	</bean>
	
	<bean id="productDao" class="com.saleschannel.api.product.ProductDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- product bean Creation and API Ends -->
	
	<!-- category bean Creation and API Starts -->
	<bean name="/category" class="com.saleschannel.api.productcategory.ProductCategoryController" scope="prototype">
		<property name="categoryService" ref="categoryService" />
		<property name="customerService" ref="customerService" />
    </bean>
	
	<bean name="/categoryColumn" class="com.saleschannel.api.productcategory.ProductCategoryColumnController" scope="prototype">
		<property name="categoryService" ref="categoryService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/columnValidValues" class="com.saleschannel.api.productcategory.CategoryColumnValidValuesController" scope="prototype">
		<property name="categoryService" ref="categoryService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/columnsValue" class="com.saleschannel.api.productcategory.CategoryColumnsValueController" scope="prototype">
		<property name="categoryService" ref="categoryService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
	<bean id="categoryService" class="com.saleschannel.api.productcategory.ProductCategoryServiceImpl">
		<property name="categoryDao" ref="categoryDao" />
		<property name="productDao" ref="productDao" />
	</bean>
	
	<bean id="categoryDao" class="com.saleschannel.api.productcategory.ProductCategoryDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- category bean Creation and API Ends -->
	
	<!-- category mapping bean Creation and API Starts -->
	<bean name="/categoryMapping" class="com.saleschannel.api.productcategorymapping.ProductCategoryMappingController" scope="prototype">
		<property name="categoryMappingService" ref="categoryMappingService" />
		<property name="customerService" ref="customerService" />
    </bean>
	
	<bean id="categoryMappingService" class="com.saleschannel.api.productcategorymapping.ProductCategoryMappingServiceImpl">
		<property name="categoryMappingDao" ref="categoryMappingDao" />
		<property name="categoryDao" ref="categoryDao" />
	</bean>
	
	<bean id="categoryMappingDao" class="com.saleschannel.api.productcategorymapping.ProductCategoryMappingDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- category mapping bean Creation and API Ends -->
	
	<!-- market place bean Creation and API Starts -->
	<bean name="/marketplace" class="com.saleschannel.api.marketplace.MarketPlaceController" scope="prototype">
		<property name="marketPlaceService" ref="marketPlaceService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/marketplaceRegion" class="com.saleschannel.api.marketplace.MarketPlaceRegionController" scope="prototype">
		<property name="marketPlaceService" ref="marketPlaceService" />
		<property name="customerService" ref="customerService" />
    </bean>
    
    <bean name="/marketplaceCustomer" class="com.saleschannel.api.marketplace.MarketPlaceCustomerRegionController" scope="prototype">
		<property name="marketPlaceService" ref="marketPlaceService" />
		<property name="customerService" ref="customerService" />
    </bean>
	
	<bean id="marketPlaceService" class="com.saleschannel.api.marketplace.MarketPlaceServiceImpl">
		<property name="marketPlaceDao" ref="marketPlaceDao" />
	</bean>
	
	<bean id="marketPlaceDao" class="com.saleschannel.api.marketplace.MarketPlaceDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- market place bean Creation and API Ends -->
	
	<!-- warehouse bean Creation and API Starts -->
	<bean name="/warehouse" class="com.saleschannel.api.warehouse.WarehouseController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="inventoryService" ref="inventoryService" />
		<property name="warehouseService" ref="warehouseService" />
    </bean>
	
	<bean id="warehouseService" class="com.saleschannel.api.warehouse.WarehouseServiceImpl">
		<property name="inventoryService" ref="inventoryService" />
		<property name="warehouseDao" ref="warehouseDao" />
	</bean>
	
	<bean id="warehouseDao" class="com.saleschannel.api.warehouse.WarehouseDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- warehouse bean Creation and API Ends -->
	
	<!-- warehouse bean Creation and API Starts -->
	<bean name="/inventory" class="com.saleschannel.api.inventory.InventoryController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="inventoryService" ref="inventoryService" />
		<property name="warehouseService" ref="warehouseService" />
    </bean>
    
    <bean name="/shelf" class="com.saleschannel.api.inventory.ShelfController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="inventoryService" ref="inventoryService" />
		<property name="warehouseService" ref="warehouseService" />
    </bean>
    
    <bean name="/bin" class="com.saleschannel.api.inventory.BinController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="inventoryService" ref="inventoryService" />
    </bean>
    
    <bean name="/binContent" class="com.saleschannel.api.inventory.BinContentController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="productService" ref="productService" />
		<property name="inventoryService" ref="inventoryService" />
    </bean>
	
	<bean id="inventoryService" class="com.saleschannel.api.inventory.InventoryServiceImpl">
		<property name="inventoryDao" ref="inventoryDao" />
	</bean>
	
	<bean id="inventoryDao" class="com.saleschannel.api.inventory.InventoryDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- warehouse bean Creation and API Ends -->
	
	<!-- Orders bean Creation and API Starts -->
	<bean name="/orders" class="com.saleschannel.api.order.OrdersController" scope="prototype">
		<property name="customerService" ref="customerService" />
		<property name="ordersService" ref="ordersService" />
    </bean>
    
	<bean id="ordersService" class="com.saleschannel.api.order.OrdersServiceImpl">
		<property name="ordersDao" ref="ordersDao" />
	</bean>
	
	<bean id="ordersDao" class="com.saleschannel.api.order.OrdersDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- Orders bean Creation and API Ends -->
	
	<!-- FlatFile bean Creation and API Starts -->
	<bean id="flatFileService" class="com.saleschannel.api.flatfile.FlatFileServiceImpl">
		<property name="flatFileDao" ref="flatFileDao" />
	</bean>
	
	<bean id="flatFileDao" class="com.saleschannel.api.flatfile.FlatFileDaoImpl">
		<constructor-arg name="mongoOps" ref="mongoTemplate" />		
	</bean>
	<!-- FlatFile bean Creation and API Ends -->
	
	<!-- sales channel bean Creation Ends -->
	
</beans>